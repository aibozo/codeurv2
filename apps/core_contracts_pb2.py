# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: core_contracts.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14\x63ore_contracts.proto\x12\x04\x63ore\"a\n\rChangeRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\x11\n\trequester\x18\x02 \x01(\t\x12\x0c\n\x04repo\x18\x03 \x01(\t\x12\x0e\n\x06\x62ranch\x18\x04 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x05 \x01(\t\"?\n\x04Step\x12\r\n\x05order\x18\x01 \x01(\x05\x12\x0c\n\x04goal\x18\x02 \x01(\t\x12\x0c\n\x04kind\x18\x03 \x01(\t\x12\x0c\n\x04path\x18\x04 \x01(\t\"w\n\x04Plan\x12\n\n\x02id\x18\x01 \x01(\t\x12\x19\n\x11parent_request_id\x18\x02 \x01(\t\x12\x19\n\x05steps\x18\x03 \x03(\x0b\x32\n.core.Step\x12\x11\n\trationale\x18\x04 \x03(\t\x12\x1a\n\x12reserved_lease_ids\x18\x05 \x03(\t\"\xae\x01\n\nCodingTask\x12\n\n\x02id\x18\x01 \x01(\t\x12\x16\n\x0eparent_plan_id\x18\x02 \x01(\t\x12\x13\n\x0bstep_number\x18\x03 \x01(\x05\x12\x0c\n\x04goal\x18\x04 \x01(\t\x12\x0c\n\x04path\x18\x05 \x01(\t\x12\x0c\n\x04kind\x18\x06 \x01(\t\x12\x10\n\x08\x62lob_ids\x18\x07 \x03(\t\x12\x12\n\ncomplexity\x18\x08 \x01(\t\x12\x17\n\x0f\x62\x61se_commit_sha\x18\t \x01(\t\">\n\nTaskBundle\x12\x0f\n\x07plan_id\x18\x01 \x01(\t\x12\x1f\n\x05tasks\x18\x02 \x03(\x0b\x32\x10.core.CodingTask\"g\n\x0c\x43ommitResult\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x12\x12\n\ncommit_sha\x18\x02 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\x13\n\x0b\x62ranch_name\x18\x04 \x01(\t\x12\r\n\x05notes\x18\x05 \x03(\t\"\x89\x01\n\x0b\x42uildReport\x12\x12\n\ncommit_sha\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x14\n\x0c\x66\x61iled_tests\x18\x03 \x03(\t\x12\x13\n\x0blint_errors\x18\x04 \x03(\t\x12\x15\n\rline_coverage\x18\x05 \x01(\x01\x12\x14\n\x0c\x61rtefact_url\x18\x06 \x01(\t\"1\n\x08TestSpec\x12\n\n\x02id\x18\x01 \x01(\t\x12\x19\n\x11parent_commit_sha\x18\x02 \x01(\t\"G\n\x0eGeneratedTests\x12\x0f\n\x07spec_id\x18\x01 \x01(\t\x12\x12\n\ncommit_sha\x18\x02 \x01(\t\x12\x10\n\x08precheck\x18\x03 \x01(\t\"/\n\x10RegressionTicket\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0f\n\x07summary\x18\x02 \x01(\t\"3\n\x08\x44\x65\x65pPlan\x12\n\n\x02id\x18\x01 \x01(\t\x12\x1b\n\x06phases\x18\x02 \x03(\x0b\x32\x0b.core.Phase\"!\n\x05Phase\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04goal\x18\x02 \x01(\tb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'core_contracts_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_CHANGEREQUEST']._serialized_start=30
  _globals['_CHANGEREQUEST']._serialized_end=127
  _globals['_STEP']._serialized_start=129
  _globals['_STEP']._serialized_end=192
  _globals['_PLAN']._serialized_start=194
  _globals['_PLAN']._serialized_end=313
  _globals['_CODINGTASK']._serialized_start=316
  _globals['_CODINGTASK']._serialized_end=490
  _globals['_TASKBUNDLE']._serialized_start=492
  _globals['_TASKBUNDLE']._serialized_end=554
  _globals['_COMMITRESULT']._serialized_start=556
  _globals['_COMMITRESULT']._serialized_end=659
  _globals['_BUILDREPORT']._serialized_start=662
  _globals['_BUILDREPORT']._serialized_end=799
  _globals['_TESTSPEC']._serialized_start=801
  _globals['_TESTSPEC']._serialized_end=850
  _globals['_GENERATEDTESTS']._serialized_start=852
  _globals['_GENERATEDTESTS']._serialized_end=923
  _globals['_REGRESSIONTICKET']._serialized_start=925
  _globals['_REGRESSIONTICKET']._serialized_end=972
  _globals['_DEEPPLAN']._serialized_start=974
  _globals['_DEEPPLAN']._serialized_end=1025
  _globals['_PHASE']._serialized_start=1027
  _globals['_PHASE']._serialized_end=1060
# @@protoc_insertion_point(module_scope)
